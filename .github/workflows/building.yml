name: Testing and building
on:
  push:
jobs:
  testing:
    runs-on: ubuntu-latest
    environment: dev
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DMK_URL: ${{ secrets.DMK_URL }}
      KIS_URL: ${{ secrets.KIS_URL }}
      BROKER_URL: ${{ secrets.BROKER_URL }}
      RESULT_URL: ${{ secrets.RESULT_URL }}
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      KIS_USER: ${{ secrets.KIS_USER }}
      DMK_USER: ${{ secrets.DMK_USER }}
      KIS_PASS: ${{ secrets.KIS_PASS }}
      DMK_PASS: ${{ secrets.DMK_PASS }}

    steps:
      - name: Get code from repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            backend
          submodules: recursive
      - name: Install Redis
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-server
          sudo systemctl start redis-server
          sudo systemctl status redis-server
      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib
          sudo systemctl start postgresql
          sudo systemctl status postgresql
          cd /tmp
          sudo -u postgres psql -c "CREATE USER $KIS_USER WITH PASSWORD '$KIS_PASS';"
          sudo -u postgres psql -c "CREATE USER $DMK_USER WITH PASSWORD '$DMK_PASS';"
          sudo -u postgres psql -c "CREATE DATABASE kis OWNER $KIS_USER;"
          sudo -u postgres psql -c "CREATE DATABASE dmk OWNER $DMK_USER;"
          sudo -u postgres psql -c "ALTER USER $KIS_USER WITH CREATEDB;"
          sudo -u postgres psql -c "ALTER USER $DMK_USER WITH CREATEDB;"
      - name: Install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip3 install -r /home/runner/work/Hospital_Dashboard/Hospital_Dashboard/backend/requirements.txt
      - name: Create .env file
        run: |
          GITHUB_ENV='/home/runner/work/Hospital_Dashboard/Hospital_Dashboard/backend/backend/.env'
          echo 'SECRET_KEY'=${{ env.SECRET_KEY }} >> $GITHUB_ENV
          echo 'DEBUG'=${{ env.DEBUG }} >> $GITHUB_ENV
          echo 'KIS_URL'=${{ env.KIS_URL }} >> $GITHUB_ENV
          echo 'DMK_URL'=${{ env.DMK_URL }} >> $GITHUB_ENV
          echo 'BROKER_URL'=${{ env.BROKER_URL }} >> $GITHUB_ENV
          echo 'RESULT_URL'=${{ env.RESULT_URL }} >> $GITHUB_ENV
          echo 'TG_TOKEN'=${{ env.TG_TOKEN }} >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: Testing app
        run: |
          source venv/bin/activate
          python3 -m pytest /home/runner/work/Hospital_Dashboard/Hospital_Dashboard/backend/data
      - name: Get branch name
        run: |
          git_branch=${GITHUB_REF#refs/heads/}
          echo branch=$git_branch >> $GITHUB_ENV
      - name: Create Pull Request
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/vlf0/Hospital_Dashboard/pulls \
            -d '{
                  "title": "Automated pull request",
                  "body": "This is an automated pull request created by GitHub Actions.",
                  "head": "${{ env.branch }}",
                  "base": "main"
                }'
